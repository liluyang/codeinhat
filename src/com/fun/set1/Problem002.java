package com.fun.set1;

import static org.testng.Assert.assertEquals;

import org.testng.annotations.Test;

/**
 * A queue of soldiers are crossing the bridge, at speed of 1 meter per second.
 * Given the bridge's max load, will the bridge collapse? if so, when?
 * 
 * Input 
 *   weight[] - all soldier's weight
 *   bridgeLength - bridge's length 
 *   maxLoad - bridge's max load
 * Output
 *   the second when bridge will collapse; -1 if bridge will not collapse.
 */
public class Problem002 {
  public int solve(int[] weight, int bridgeLength, int maxLoad) {
    // TODO: solve problem here.
    return -1;
  }

  @Test
  public void test1() {
    assertEquals(solve(new int[] { 200, 201, 202 }, 100, 10000), -1);
  }

  @Test
  public void test2() {
    assertEquals(solve(new int[] { 200, 201, 202 }, 100, 600), 3);
  }

  @Test
  public void test3() {
    assertEquals(solve(new int[] { 200, 201, 202 }, 2, 600), -1);
  }

  @Test
  public void test4() {
    assertEquals(solve(new int[] { 100, 120, 160, 150, 130, 180, 190, 200 }, 5, 800), 7);
  }

  @Test
  public void test5() {
    int[] weight = new int[] { 163, 172, 124, 170, 140, 166, 149, 218, 142, 160, 175, 138, 217,
        203, 122, 180, 129, 142, 171, 190, 130, 214, 160, 172, 189, 162, 215, 160, 126, 211, 161,
        168, 178, 160, 137, 136, 171, 140, 143, 181, 159, 145, 149, 194, 218, 147, 173, 133, 180,
        207, 122, 162, 178, 177, 145, 197, 186, 127, 149, 173, 178, 200, 126, 158, 210, 207, 199,
        131, 146, 154, 160, 181, 154, 158, 123, 202, 217, 166, 146, 149, 137, 196, 129, 131, 185,
        184, 134, 161, 159, 189, 203, 217, 121, 177, 209, 125, 154, 149, 219, 218 };
    assertEquals(solve(weight, 10, 1791), 100);
  }

  @Test
  public void test6() {
    int[] weight = new int[] { 163, 172, 124, 170, 140, 166, 149, 218, 142, 160, 175, 138, 217,
        203, 122, 180, 129, 142, 171, 190, 130, 214, 160, 172, 189, 162, 215, 160, 126, 211, 161,
        168, 178, 160, 137, 136, 171, 140, 143, 181, 159, 145, 149, 194, 218, 147, 173, 133, 180,
        207, 122, 162, 178, 177, 145, 197, 186, 127, 149, 173, 178, 200, 126, 158, 210, 207, 199,
        131, 146, 154, 160, 181, 154, 158, 123, 202, 217, 166, 146, 149, 137, 196, 129, 131, 185,
        184, 134, 161, 159, 189, 203, 217, 121, 177, 209, 125, 154, 149, 219, 218 };
    assertEquals(solve(weight, 10, 1792), -1);
  }

  @Test
  public void test7() {
    int[] weight = new int[] { 181, 181, 138, 190, 190, 122, 212, 136, 198, 139, 206, 216, 187,
        219, 143, 132, 160, 212, 212, 210, 167, 149, 189, 200, 191, 153, 171, 164, 215, 205, 155,
        165, 137, 169, 185, 192, 147, 215, 126, 185, 208, 181, 164, 144, 141, 191, 147, 209, 186,
        146, 193, 190, 179, 164, 208, 149, 172, 188, 192, 145, 196, 205, 164, 156, 207, 199, 145,
        134, 143, 210, 142, 130, 145, 171, 200, 124, 198, 185, 182, 147, 216, 177, 138, 176, 140,
        199, 158, 211, 157, 198, 189, 179, 134, 202, 161, 154, 190, 168, 194, 146, 133, 166, 171,
        135, 132, 137, 134, 205, 218, 209, 159, 178, 161, 201, 125, 138, 212, 129, 155, 147, 187,
        177, 169, 184, 213, 203, 155, 166, 183, 196, 132, 151, 169, 167, 197, 167, 182, 151, 162,
        132, 149, 172, 134, 209, 206, 218, 210, 203, 156, 154, 135, 165, 141, 134, 121, 154, 149,
        164, 205, 169, 165, 139, 139, 185, 167, 166, 217, 171, 206, 217, 147, 150, 167, 193, 155,
        129, 163, 208, 203, 151, 133, 135, 179, 204, 124, 150, 145, 132, 154, 154, 143, 139, 204,
        209, 210, 128, 183, 186, 217, 187, 212, 179, 186, 157, 184, 209, 143, 138, 143, 195, 174,
        127, 201, 176, 194, 149, 131, 143, 124, 191, 172, 212, 129, 135, 182, 170, 219, 193, 209,
        135, 215, 174, 170, 180, 155, 219, 168, 203, 185, 211, 158, 171, 204, 133, 209, 195, 164,
        187, 139, 142, 124, 125, 215, 159, 144, 186, 216, 213, 127, 194, 164, 150, 175, 209, 121,
        130, 122, 203, 195, 131, 133, 177, 157, 163, 205, 203, 218, 199, 193, 212, 140, 179, 143,
        208, 167, 190, 191, 164, 153, 156, 193, 217, 134, 123, 191, 167, 140, 143, 135, 189, 165,
        170, 208, 147, 208, 161, 121, 200, 182, 217, 138, 174, 185, 210, 198, 138, 188, 142, 206,
        161, 162, 177, 120, 209, 186, 212, 157, 169, 180, 193, 201, 198, 190, 123, 141, 159, 178,
        139, 123, 192, 127, 179, 162, 217, 131, 183, 189, 173, 123, 122, 149, 184, 210, 190, 191,
        138, 129, 120, 137, 187, 216, 150, 213, 140, 202, 127, 144, 134, 179, 127, 168, 151, 140,
        180, 129, 214, 145, 165, 203, 188, 130, 130, 149, 165, 175, 169, 123, 208, 217, 208, 169,
        201, 174, 167, 179, 189, 182, 185, 157, 203, 192, 187, 204, 193, 196, 125, 196, 189, 207,
        134, 126, 179, 158, 131, 165, 206, 133, 143, 124, 200, 187, 190, 199, 206, 202, 156, 207,
        175, 216, 193, 121, 124, 201, 144, 147, 178, 157, 141, 206, 141, 134, 168, 156, 199, 135,
        168, 125, 141, 201, 148, 146, 120, 139, 205, 122, 191, 209, 217, 128, 148, 153, 144, 135,
        142, 161, 210, 201, 203, 141, 157, 215, 152, 130, 189, 185, 206, 166, 133, 162, 178, 150,
        192, 172, 210, 197, 170, 154, 155, 190, 210, 188, 167, 205, 178, 187, 180, 193, 157, 189,
        159, 190, 192, 199, 195, 170, 135, 163, 186, 129, 131, 135, 215, 217, 147, 211, 189, 173,
        196, 124, 199, 218, 159, 161, 149, 157, 197, 218, 216, 196, 153, 144, 178, 131, 214, 143,
        185, 171, 207, 177, 166, 197, 138, 148, 170, 186, 129, 175, 189, 212, 120, 183, 143, 205,
        171, 199, 204, 143, 195, 147, 203, 135, 146, 198, 200, 196, 128, 130, 168, 180, 209, 150,
        146, 155, 208, 202, 207, 124, 126, 152, 218, 168, 121, 195, 138, 162, 184, 200, 138, 205,
        196, 210, 164, 149, 131, 135, 217, 148, 149, 137, 201, 154, 213, 163, 138, 173, 148, 151,
        208, 191, 197, 186, 140, 146, 199, 196, 197, 214, 164, 142, 161, 165, 191, 187, 149, 139,
        146, 154, 197, 145, 138, 150, 143, 157, 151, 199, 162, 149, 143, 177, 151, 145, 136, 124,
        159, 150, 171, 171, 212, 132, 209, 219, 191, 208, 164, 187, 191, 176, 145, 172, 145, 174,
        198, 183, 167, 195, 203, 160, 155, 201, 143, 176, 180, 215, 141, 191, 184, 145, 192, 203,
        151, 144, 169, 216, 167, 215, 188, 141, 189, 181, 146, 149, 212, 163, 149, 151, 173, 187,
        165, 136, 123, 163, 188, 178, 180, 139, 154, 131, 190, 141, 211, 204, 125, 144, 145, 144,
        173, 176, 218, 141, 140, 186, 143, 165, 121, 176, 208, 163, 156, 203, 129, 188, 140, 205,
        172, 157, 151, 209, 165, 200, 205, 188, 207, 207, 214, 177, 153, 174, 206, 209, 126, 195,
        148, 206, 169, 156, 146, 177, 190, 169, 193, 135, 126, 152, 149, 145, 178, 124, 173, 128,
        167, 161, 121, 132, 144, 187, 140, 210, 161, 165, 144, 181, 197, 164, 129, 145, 160, 141,
        163, 122, 180, 167, 204, 156, 178, 140, 134, 173, 135, 184, 189, 125, 152, 219, 198, 135,
        127, 196, 189, 184, 137, 150, 157, 151, 138, 123, 138, 176, 160, 181, 150, 183, 209, 172,
        120, 150, 191, 120, 139, 195, 149, 151, 160, 135, 128, 138, 204, 219, 208, 130, 213, 162,
        129, 165, 160, 141, 206, 217, 151, 187, 197, 128, 152, 188, 217, 189, 178, 176, 130, 203,
        156, 214, 208, 139, 206, 143, 151, 126, 148, 162, 141, 166, 214, 185, 153, 186, 120, 218,
        124, 168, 174, 205, 135, 130, 174, 205, 209, 153, 190, 211, 179, 186, 122, 181, 146, 164,
        150, 185, 169, 187, 213, 166, 216, 211, 190, 148, 208, 156, 156, 157, 185, 138, 137, 199,
        202, 142, 151, 138, 153, 168, 159, 174, 175, 213, 204, 166, 214, 152, 161, 148, 173, 132,
        206, 181, 161, 185, 197, 181, 120, 180, 181, 164, 188, 198, 180, 188, 142, 161, 195, 199,
        155, 170, 190, 173, 128, 159, 178, 156, 169, 137, 206, 212, 129, 194, 121, 157, 183, 173,
        201, 168, 175, 138, 204, 174, 165, 193, 129, 156, 154, 195, 186, 124, 213, 192, 139, 202,
        126, 202, 132, 195, 205, 198, 174, 126, 148, 209, 130, 196, 178, 145, 148 };
    assertEquals(solve(weight, 25, 4594), 409);
  }
}
